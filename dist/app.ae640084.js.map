{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","index.js","app.js"],"names":["row","content","styles","col","css","Object","keys","map","key","join","block","type","Block","value","options","Arrow","TitleBlock","tag","TextBlock","ImageBlock","is","imageStyles","alt","ColumnsBlock","html","item","model","image","padding","display","width","height","background","color","Site","selector","$el","document","querySelector","innerHTML","forEach","insertAdjacentHTML","toHTML","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","target","name","newBlock","Index","site","render","push"],"mappings":"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","file":"app.ae640084.js","sourceRoot":"..\\src","sourcesContent":["export function row(content, styles = '') {\r\n    return `<div class=\"row\" style=\"${styles}\">${content}</div>`\r\n}\r\nexport function col(content) {\r\n    return `<div class=\"col-sm\">${content}</div>`\r\n}\r\n\r\nexport function css(styles = {}) {\r\n    if (typeof styles === 'string') {\r\n        return styles\r\n    }\r\n    const toString = key => `${key}:${styles[key]}`\r\n    return Object.keys(styles).map(toString).join(';')\r\n}\r\n\r\n\r\nexport function block(type) {\r\n    return `\r\n    <form name=\"${type}\">\r\n        <h5>${type}</h5>\r\n        <div className=\"form-group\">\r\n            <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\"/>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-sm\">Add</button>\r\n    </form>\r\n    <hr/>`\r\n}","\r\nimport { row, col, css } from './../utils';\r\n\r\nclass Block {\r\n    constructor(value, options) {\r\n\r\n        this.value = value\r\n        this.options = options\r\n    }\r\n\r\n    toHTML() {\r\n        throw new Arrow('метод toHTML должен быть реализован')\r\n    }\r\n\r\n}\r\n\r\nexport class TitleBlock extends Block {\r\n    constructor(value, options) {\r\n        super( value, options)\r\n\r\n    }\r\n    toHTML() {\r\n        const { tag = 'h1', styles } = this.options\r\n        return row(col(` <${tag}>${this.value}</${tag}>`), css(styles))\r\n    }\r\n\r\n}\r\n\r\nexport class TextBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n    toHTML() {\r\n        const { styles } = this.options\r\n        return row(col(`<p>${this.value}</p>`), css(styles))\r\n\r\n    }\r\n}\r\nexport class ImageBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n\r\n    }\r\n    toHTML() {\r\n        const { styles, imageStyles: is, alt = '' } = this.options\r\n        return row(`<img src=${this.value} alt=\"${alt}\" style=\"${css(is)}\"/>`, css(styles))\r\n    }\r\n}\r\nexport class ColumnsBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n\r\n    }\r\n    toHTML() {\r\n        const { styles } = this.options\r\n        const html = this.value.map(item => col(item))\r\n        return row(html.join(''), css(styles))\r\n    }\r\n}\r\n","import image from './assets/img/placeimg_640_480_nature.jpg'\r\nimport { TitleBlock, TextBlock, ImageBlock, ColumnsBlock } from './classes/blocks';\r\n\r\nexport const model = [\r\n    new TitleBlock('Конструктор на JS', {\r\n        tag: 'h2',\r\n        styles: {\r\n            'background': 'linear-gradient(to right, #ff0099, #493240)',\r\n            'color': ' #fff',\r\n            'text-align': 'center',\r\n            'padding': '1.5rem'\r\n        }\r\n    }),\r\n    new ImageBlock(image, {\r\n        styles: {\r\n            padding: '2rem 0',\r\n            display: 'flex',\r\n            'justify-content': 'center'\r\n        },\r\n        imageStyles: {\r\n            width: 'auto',\r\n            height: 'auto'\r\n        },\r\n        alt: \"nature\"\r\n    }),\r\n    new TextBlock('here we go with some text', {\r\n        styles: {\r\n            background: 'linear-gradient(to left, #f2994a, #f2c94c)',\r\n            padding: '1rem',\r\n            'font-weight': 'bold'\r\n        }\r\n    }),\r\n    new ColumnsBlock([\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Perspiciatis, praesentium?',\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Perspiciatis, praesentium?',\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Perspiciatis, praesentium?'\r\n    ], {\r\n        styles: {\r\n            background: 'linear-gradient(to bottom, #8e2de2, #4a00e0)',\r\n            padding: '2rem',\r\n            color: '#fff',\r\n            'font-weight': 'bold'\r\n        }\r\n\r\n    })\r\n]\r\n","export class Site {\r\n    constructor(selector) {\r\n        this.$el = document.querySelector(selector);\r\n\r\n    }\r\n    render(model) {\r\n        this.$el.innerHTML = ''\r\n        model.forEach(block => {\r\n            this.$el.insertAdjacentHTML('beforeend', block.toHTML())\r\n\r\n        })\r\n    }\r\n\r\n}","import { block } from '../utils'\r\nimport { TextBlock, TitleBlock } from './blocks';\r\n\r\nexport class Sidebar {\r\n    constructor(selector, updateCallback) {\r\n        this.$el = document.querySelector(selector);\r\n\r\n        this.update = updateCallback\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$el.insertAdjacentHTML('afterbegin', this.template);\r\n        this.$el.addEventListener('submit', this.add.bind(this));\r\n    }\r\n    get template() {\r\n        return [block('text'), block('title')].join('');\r\n\r\n    }\r\n    add(event) {\r\n        event.preventDefault()\r\n\r\n        const type = event.target.name;\r\n        const value = event.target.value.value;\r\n        const styles = event.target.styles.value;\r\n\r\n        const newBlock = type === 'text'\r\n            ? new TextBlock(value, { styles: styles })\r\n            : new TitleBlock(value, { styles: styles })\r\n\r\n\r\n        this.update(newBlock)\r\n        event.target.value.value = ''\r\n        event.target.styles.value = ''\r\n    }\r\n}\r\n\r\n","\r\nimport { Site } from './classes/site';\r\nimport { Sidebar } from './classes/sidebar';\r\n\r\nexport class Index {\r\n    constructor(model) {\r\n        this.model = model\r\n        \r\n    }\r\n    init() {\r\n        const site = new Site('#site')\r\n\r\n        site.render(this.model)\r\n\r\n        const updateCallback = newBlock => {\r\n            this.model.push(newBlock)\r\n            site.render(this.model)\r\n        }\r\n\r\n        new Sidebar('#panel', updateCallback)\r\n    }\r\n\r\n}","\r\nimport { model } from './model';\r\nimport './styles/main.css'\r\nimport { Index } from './index';\r\n\r\nnew Index(model).init()\r\n\r\n\r\n"]}